{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst API_KEY = '48210883-f70532ba3d786d958e1d4920f'; \nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 15) {\n  try {\n    const params = {\n      key: API_KEY,\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      page,\n      per_page: perPage,\n    };\n\n    const response = await axios.get(BASE_URL, { params });\n   // Якщо API повертає некоректні дані\n    if (!response.data.hits || response.data.hits.length === 0) {\n      iziToast.info({\n        title: 'No Results',\n        message: 'No images found for your query. Please try again.',\n      });\n      return null;\n    }\n\n    return response.data;\n  } catch (error) {\n    // Обробка помилок і дружнє повідомлення\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n    });\n    throw error; // Повторно кидаємо помилку для подальшої обробки\n  }\n}\n","export function renderImageGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  \n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <div class=\"photo-card\">\n        <a href=\"${largeImageURL}\" class=\"gallery-item\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p>\n                <span>Likes</span>\n                <span>${likes}</span>\n                \n            </p>\n            <p>\n                <span>Views</span>\n                <span>${views}</span>\n                \n            </p>\n            <p>\n                \n                <span>Comments</span>\n                <span>${comments}</span>\n            </p>\n            <p>\n                \n                <span>Downloads</span>\n                <span>${downloads}</span>\n            </p>\n          </div>\n        </div>\n      `\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n}","import { fetchImages } from './js/pixabay-api'; //функція для отримання зображень із Pixabay API.\nimport { renderImageGallery, clearGallery } from './js/render-functions';//функція для створення HTML-розмітки галереї.,функція для очищення галереї.\nimport SimpleLightbox from 'simplelightbox';//бібліотека для створення модального вікна зі збільшеним зображенням.\nimport 'simplelightbox/dist/simple-lightbox.min.css';// стилі для бібліотеки SimpleLightbox.\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst form = document.querySelector('.search-form');//знаходимо HTML-елемент форми для пошуку зображень за класом .search-form\nconst loadMoreBtn = document.querySelector('.load-more');//знаходимо кнопку \"Load more\" за класом .load-more\nconst gallery = document.querySelector('.gallery');//знаходимо контейнер для галереї зображень за класом .gallery\nconst loader = document.querySelector('.loader'); // лоадер для індикації завантаження.\n\n\nlet query = '';//зберігає ключове слово, яке ввів користувач у формі.\nlet page = 1;//номер сторінки результатів пошуку. Починаємо з 1.\nconst perPage = 15;//кількість зображень, які ми завантажуємо за один запит (15 зображень).\nlet totalHits = 0;//загальна кількість доступних зображень для заданого ключового слова (повертається API).\n\n//Ініціалізація SimpleLightbox\nconst lightbox = new SimpleLightbox('.gallery a'); //Використовується для створення модального вікна, де зображення відкривається у великому розмірі.\n\n// Функція для показу лоадера.\nfunction showLoader() {\n  loader.classList.remove('hidden'); // Показуємо лоадер.\n}\n\n// Функція для приховування лоадера.\nfunction hideLoader() {\n  loader.classList.add('hidden'); // Ховаємо лоадер\n}\n\n\n//Обробка події submit форми\n//слухаємо подію submit на формі (тобто коли користувач натискає \"Search\").Коли форма відправляється, виконується функція\nform.addEventListener('submit', async (event) => {\n  event.preventDefault(); //Забороняємо перезавантаження сторінки, яке відбувається за замовчуванням під час відправки форми.\n  query = event.currentTarget.elements.searchQuery.value.trim();//Отримуємо значення поля введення з ім'ям searchQuery.Видаляємо зайві пробіли з початку і кінця тексту.\n    if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search query.',\n    });\n    return;\n  }\n    \n\n//Скидаємо налаштування для нового пошуку\n  page = 1; //Оновлюємо сторінку на 1, тому що починаємо новий пошук\n  clearGallery(); //Видаляємо всі попередні зображення з галереї\n    loadMoreBtn.classList.add('hidden'); //Ховаємо кнопку \"Load more\", поки не отримали нові результати.\n    showLoader();\n//Виконуємо запит на отримання зображень\n  try {\n    const data = await fetchImages(query, page, perPage);// fetchImages:Викликаємо функцію для отримання зображень із API.Передаємо query (ключове слово), page (номер сторінки) і perPage (кількість зображень)\n    totalHits = data.totalHits;// Зберігаємо загальну кількість результатів, які повернув сервер\n\n    if (totalHits === 0) {\n     iziToast.info({\n        title: 'Info',\n        message: 'Sorry, no images match your search query. Please try again.',\n      });\n      return;\n    }  //Якщо сервер повернув 0 результатів, показуємо повідомлення і завершуємо виконання функції.\n\n//Відображаємо зображення\n    renderImageGallery(data.hits);//Передаємо список зображень (data.hits) у функцію, яка створює їх HTML-розмітку і додає в галерею.\n    lightbox.refresh(); //Оновлюємо SimpleLightbox, щоб нові зображення теж відкривалися у модальному вікні.\n\n    iziToast.success({\n      title: 'Success',\n      message: `Hooray! We found ${totalHits} images.`,\n    });  \n      //Показуємо кнопку \"Load more\", якщо є ще зображення\n    if (page * perPage < totalHits) {\n      loadMoreBtn.classList.remove('hidden'); //Якщо завантажених зображень ще недостатньо для досягнення totalHits, показуємо кнопку \"Load more\".\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'An error occurred while fetching images. Please try again.',\n    });\n    console.error('Error during search:', error);\n  } finally {\n    hideLoader(); // Ховаємо лоадер після завершення запиту.\n  }\n});\n\n//Обробка події кліку на кнопку \"Load more\"\n\nloadMoreBtn.addEventListener('click', async () => {\n  page += 1; //Переходимо до наступної сторінки результатів.\n  showLoader(); // Показуємо лоадер.\n\n  try {\n    const data = await fetchImages(query, page, perPage);//Викликаємо fetchImages для завантаження зображень із наступної сторінки\n\n    renderImageGallery(data.hits);//Додаємо нові зображення до вже існуючих у галереї.\n    lightbox.refresh(); //Оновлюємо SimpleLightbox.\n      \n    //Ховаємо кнопку, якщо досягли кінця результатів\n    if (page * perPage >= totalHits) {\n      loadMoreBtn.classList.add('hidden');\n      iziToast.info({\n        title: 'Info',\n        message: \"We're sorry, but you've reached the end of search results.\",\n      });\n    } else {\n      smoothScroll(); //Інакше викликаємо функцію плавного прокручування.\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'An error occurred while loading more images.',\n    });\n    console.error('Error loading more images:', error);\n  } finally {\n    hideLoader(); // Ховаємо лоадер після завершення запиту.\n  }\n});\n//Плавне прокручування сторінки\nfunction smoothScroll() { //оголошення звичайної функції, яка виконує прокручування сторінки.\n    const { height: cardHeight } = gallery.firstElementChild.getBoundingClientRect();//Отримуємо висоту першої картки.Ми отримуємо тільки властивість height (висоту елемента) з результату getBoundingClientRect() і зберігаємо її в змінну cardHeight.\n    \n    //Це метод, який прокручує сторінку на задану кількість пікселів від поточного положення.\n//window.scrollBy({ top: значення, behavior: 'тип' });\n window.scrollBy({\n    top: cardHeight * 2,//Вказує, наскільки вниз потрібно прокрутити сторінку.Ми прокручуємо на відстань, яка дорівнює двом висотам першої картки (щоб нові додані елементи стали видимими).\n    behavior: 'smooth',//Визначає, що прокрутка повинна бути плавною (замість різкого стрибка).\n  });\n}\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","params","response","axios","iziToast","error","renderImageGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","form","loadMoreBtn","loader","totalHits","lightbox","SimpleLightbox","showLoader","hideLoader","event","data","smoothScroll","cardHeight"],"mappings":"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"}